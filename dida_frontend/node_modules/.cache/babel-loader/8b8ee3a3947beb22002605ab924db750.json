{"ast":null,"code":"\"use strict\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar assign = require('object-assign');\nvar _require = require('../util/observable'),\n  Observable = _require.Observable;\nvar polyfilledEventSource = require('@sanity/eventsource');\nvar pick = require('../util/pick');\nvar defaults = require('../util/defaults');\nvar encodeQueryString = require('./encodeQueryString'); // Limit is 16K for a _request_, eg including headers. Have to account for an\n// unknown range of headers, but an average EventSource request from Chrome seems\n// to have around 700 bytes of cruft, so let us account for 1.2K to be \"safe\"\n\nvar MAX_URL_LENGTH = 16000 - 1200;\nvar EventSource = polyfilledEventSource;\nvar possibleOptions = ['includePreviousRevision', 'includeResult', 'visibility', 'effectFormat', 'tag'];\nvar defaultOptions = {\n  includeResult: true\n};\nmodule.exports = function listen(query, params) {\n  var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _this$clientConfig = this.clientConfig,\n    url = _this$clientConfig.url,\n    token = _this$clientConfig.token,\n    withCredentials = _this$clientConfig.withCredentials,\n    requestTagPrefix = _this$clientConfig.requestTagPrefix;\n  var tag = opts.tag && requestTagPrefix ? [requestTagPrefix, opts.tag].join('.') : opts.tag;\n  var options = _objectSpread(_objectSpread({}, defaults(opts, defaultOptions)), {}, {\n    tag: tag\n  });\n  var listenOpts = pick(options, possibleOptions);\n  var qs = encodeQueryString({\n    query: query,\n    params: params,\n    options: listenOpts,\n    tag: tag\n  });\n  var uri = \"\".concat(url).concat(this.getDataUrl('listen', qs));\n  if (uri.length > MAX_URL_LENGTH) {\n    return new Observable(function (observer) {\n      return observer.error(new Error('Query too large for listener'));\n    });\n  }\n  var listenFor = options.events ? options.events : ['mutation'];\n  var shouldEmitReconnect = listenFor.indexOf('reconnect') !== -1;\n  var esOptions = {};\n  if (token || withCredentials) {\n    esOptions.withCredentials = true;\n  }\n  if (token) {\n    esOptions.headers = {\n      Authorization: \"Bearer \".concat(token)\n    };\n  }\n  return new Observable(function (observer) {\n    var es = getEventSource();\n    var reconnectTimer;\n    var stopped = false;\n    function onError() {\n      if (stopped) {\n        return;\n      }\n      emitReconnect(); // Allow event handlers of `emitReconnect` to cancel/close the reconnect attempt\n\n      if (stopped) {\n        return;\n      } // Unless we've explicitly stopped the ES (in which case `stopped` should be true),\n      // we should never be in a disconnected state. By default, EventSource will reconnect\n      // automatically, in which case it sets readyState to `CONNECTING`, but in some cases\n      // (like when a laptop lid is closed), it closes the connection. In these cases we need\n      // to explicitly reconnect.\n\n      if (es.readyState === EventSource.CLOSED) {\n        unsubscribe();\n        clearTimeout(reconnectTimer);\n        reconnectTimer = setTimeout(open, 100);\n      }\n    }\n    function onChannelError(err) {\n      observer.error(cooerceError(err));\n    }\n    function onMessage(evt) {\n      var event = parseEvent(evt);\n      return event instanceof Error ? observer.error(event) : observer.next(event);\n    }\n    function onDisconnect(evt) {\n      stopped = true;\n      unsubscribe();\n      observer.complete();\n    }\n    function unsubscribe() {\n      es.removeEventListener('error', onError, false);\n      es.removeEventListener('channelError', onChannelError, false);\n      es.removeEventListener('disconnect', onDisconnect, false);\n      listenFor.forEach(function (type) {\n        return es.removeEventListener(type, onMessage, false);\n      });\n      es.close();\n    }\n    function emitReconnect() {\n      if (shouldEmitReconnect) {\n        observer.next({\n          type: 'reconnect'\n        });\n      }\n    }\n    function getEventSource() {\n      var evs = new EventSource(uri, esOptions);\n      evs.addEventListener('error', onError, false);\n      evs.addEventListener('channelError', onChannelError, false);\n      evs.addEventListener('disconnect', onDisconnect, false);\n      listenFor.forEach(function (type) {\n        return evs.addEventListener(type, onMessage, false);\n      });\n      return evs;\n    }\n    function open() {\n      es = getEventSource();\n    }\n    function stop() {\n      stopped = true;\n      unsubscribe();\n    }\n    return stop;\n  });\n};\nfunction parseEvent(event) {\n  try {\n    var data = event.data && JSON.parse(event.data) || {};\n    return assign({\n      type: event.type\n    }, data);\n  } catch (err) {\n    return err;\n  }\n}\nfunction cooerceError(err) {\n  if (err instanceof Error) {\n    return err;\n  }\n  var evt = parseEvent(err);\n  return evt instanceof Error ? evt : new Error(extractErrorMessage(evt));\n}\nfunction extractErrorMessage(err) {\n  if (!err.error) {\n    return err.message || 'Unknown listener error';\n  }\n  if (err.error.description) {\n    return err.error.description;\n  }\n  return typeof err.error === 'string' ? err.error : JSON.stringify(err.error, null, 2);\n}","map":{"version":3,"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","assign","require","_require","Observable","polyfilledEventSource","pick","defaults","encodeQueryString","MAX_URL_LENGTH","EventSource","possibleOptions","defaultOptions","includeResult","module","exports","listen","query","params","opts","undefined","_this$clientConfig","clientConfig","url","token","withCredentials","requestTagPrefix","tag","join","options","listenOpts","qs","uri","concat","getDataUrl","observer","error","Error","listenFor","events","shouldEmitReconnect","indexOf","esOptions","headers","Authorization","es","getEventSource","reconnectTimer","stopped","onError","emitReconnect","readyState","CLOSED","unsubscribe","clearTimeout","setTimeout","open","onChannelError","err","cooerceError","onMessage","evt","event","parseEvent","next","onDisconnect","complete","removeEventListener","type","close","evs","addEventListener","stop","data","JSON","parse","extractErrorMessage","message","description","stringify"],"sources":["C:/Users/Sampah/Desktop/project/try/DIDASHARE/dida_frontend/node_modules/@sanity/client/lib/data/listen.js"],"sourcesContent":["\"use strict\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar assign = require('object-assign');\n\nvar _require = require('../util/observable'),\n    Observable = _require.Observable;\n\nvar polyfilledEventSource = require('@sanity/eventsource');\n\nvar pick = require('../util/pick');\n\nvar defaults = require('../util/defaults');\n\nvar encodeQueryString = require('./encodeQueryString'); // Limit is 16K for a _request_, eg including headers. Have to account for an\n// unknown range of headers, but an average EventSource request from Chrome seems\n// to have around 700 bytes of cruft, so let us account for 1.2K to be \"safe\"\n\n\nvar MAX_URL_LENGTH = 16000 - 1200;\nvar EventSource = polyfilledEventSource;\nvar possibleOptions = ['includePreviousRevision', 'includeResult', 'visibility', 'effectFormat', 'tag'];\nvar defaultOptions = {\n  includeResult: true\n};\n\nmodule.exports = function listen(query, params) {\n  var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _this$clientConfig = this.clientConfig,\n      url = _this$clientConfig.url,\n      token = _this$clientConfig.token,\n      withCredentials = _this$clientConfig.withCredentials,\n      requestTagPrefix = _this$clientConfig.requestTagPrefix;\n  var tag = opts.tag && requestTagPrefix ? [requestTagPrefix, opts.tag].join('.') : opts.tag;\n\n  var options = _objectSpread(_objectSpread({}, defaults(opts, defaultOptions)), {}, {\n    tag: tag\n  });\n\n  var listenOpts = pick(options, possibleOptions);\n  var qs = encodeQueryString({\n    query: query,\n    params: params,\n    options: listenOpts,\n    tag: tag\n  });\n  var uri = \"\".concat(url).concat(this.getDataUrl('listen', qs));\n\n  if (uri.length > MAX_URL_LENGTH) {\n    return new Observable(function (observer) {\n      return observer.error(new Error('Query too large for listener'));\n    });\n  }\n\n  var listenFor = options.events ? options.events : ['mutation'];\n  var shouldEmitReconnect = listenFor.indexOf('reconnect') !== -1;\n  var esOptions = {};\n\n  if (token || withCredentials) {\n    esOptions.withCredentials = true;\n  }\n\n  if (token) {\n    esOptions.headers = {\n      Authorization: \"Bearer \".concat(token)\n    };\n  }\n\n  return new Observable(function (observer) {\n    var es = getEventSource();\n    var reconnectTimer;\n    var stopped = false;\n\n    function onError() {\n      if (stopped) {\n        return;\n      }\n\n      emitReconnect(); // Allow event handlers of `emitReconnect` to cancel/close the reconnect attempt\n\n      if (stopped) {\n        return;\n      } // Unless we've explicitly stopped the ES (in which case `stopped` should be true),\n      // we should never be in a disconnected state. By default, EventSource will reconnect\n      // automatically, in which case it sets readyState to `CONNECTING`, but in some cases\n      // (like when a laptop lid is closed), it closes the connection. In these cases we need\n      // to explicitly reconnect.\n\n\n      if (es.readyState === EventSource.CLOSED) {\n        unsubscribe();\n        clearTimeout(reconnectTimer);\n        reconnectTimer = setTimeout(open, 100);\n      }\n    }\n\n    function onChannelError(err) {\n      observer.error(cooerceError(err));\n    }\n\n    function onMessage(evt) {\n      var event = parseEvent(evt);\n      return event instanceof Error ? observer.error(event) : observer.next(event);\n    }\n\n    function onDisconnect(evt) {\n      stopped = true;\n      unsubscribe();\n      observer.complete();\n    }\n\n    function unsubscribe() {\n      es.removeEventListener('error', onError, false);\n      es.removeEventListener('channelError', onChannelError, false);\n      es.removeEventListener('disconnect', onDisconnect, false);\n      listenFor.forEach(function (type) {\n        return es.removeEventListener(type, onMessage, false);\n      });\n      es.close();\n    }\n\n    function emitReconnect() {\n      if (shouldEmitReconnect) {\n        observer.next({\n          type: 'reconnect'\n        });\n      }\n    }\n\n    function getEventSource() {\n      var evs = new EventSource(uri, esOptions);\n      evs.addEventListener('error', onError, false);\n      evs.addEventListener('channelError', onChannelError, false);\n      evs.addEventListener('disconnect', onDisconnect, false);\n      listenFor.forEach(function (type) {\n        return evs.addEventListener(type, onMessage, false);\n      });\n      return evs;\n    }\n\n    function open() {\n      es = getEventSource();\n    }\n\n    function stop() {\n      stopped = true;\n      unsubscribe();\n    }\n\n    return stop;\n  });\n};\n\nfunction parseEvent(event) {\n  try {\n    var data = event.data && JSON.parse(event.data) || {};\n    return assign({\n      type: event.type\n    }, data);\n  } catch (err) {\n    return err;\n  }\n}\n\nfunction cooerceError(err) {\n  if (err instanceof Error) {\n    return err;\n  }\n\n  var evt = parseEvent(err);\n  return evt instanceof Error ? evt : new Error(extractErrorMessage(evt));\n}\n\nfunction extractErrorMessage(err) {\n  if (!err.error) {\n    return err.message || 'Unknown listener error';\n  }\n\n  if (err.error.description) {\n    return err.error.description;\n  }\n\n  return typeof err.error === 'string' ? err.error : JSON.stringify(err.error, null, 2);\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}