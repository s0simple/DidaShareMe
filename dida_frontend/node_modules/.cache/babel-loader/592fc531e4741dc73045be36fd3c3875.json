{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nvar VALID_ASSET_TYPES = ['image', 'file'];\nvar VALID_INSERT_LOCATIONS = ['before', 'after', 'replace'];\nexports.dataset = function (name) {\n  if (!/^(~[a-z0-9]{1}[-\\w]{0,63}|[a-z0-9]{1}[-\\w]{0,63})$/.test(name)) {\n    throw new Error('Datasets can only contain lowercase characters, numbers, underscores and dashes, and start with tilde, and be maximum 64 characters');\n  }\n};\nexports.projectId = function (id) {\n  if (!/^[-a-z0-9]+$/i.test(id)) {\n    throw new Error('`projectId` can only contain only a-z, 0-9 and dashes');\n  }\n};\nexports.validateAssetType = function (type) {\n  if (VALID_ASSET_TYPES.indexOf(type) === -1) {\n    throw new Error(\"Invalid asset type: \".concat(type, \". Must be one of \").concat(VALID_ASSET_TYPES.join(', ')));\n  }\n};\nexports.validateObject = function (op, val) {\n  if (val === null || _typeof(val) !== 'object' || Array.isArray(val)) {\n    throw new Error(\"\".concat(op, \"() takes an object of properties\"));\n  }\n};\nexports.requireDocumentId = function (op, doc) {\n  if (!doc._id) {\n    throw new Error(\"\".concat(op, \"() requires that the document contains an ID (\\\"_id\\\" property)\"));\n  }\n  exports.validateDocumentId(op, doc._id);\n};\nexports.validateDocumentId = function (op, id) {\n  if (typeof id !== 'string' || !/^[a-z0-9_.-]+$/i.test(id)) {\n    throw new Error(\"\".concat(op, \"(): \\\"\").concat(id, \"\\\" is not a valid document ID\"));\n  }\n};\nexports.validateInsert = function (at, selector, items) {\n  var signature = 'insert(at, selector, items)';\n  if (VALID_INSERT_LOCATIONS.indexOf(at) === -1) {\n    var valid = VALID_INSERT_LOCATIONS.map(function (loc) {\n      return \"\\\"\".concat(loc, \"\\\"\");\n    }).join(', ');\n    throw new Error(\"\".concat(signature, \" takes an \\\"at\\\"-argument which is one of: \").concat(valid));\n  }\n  if (typeof selector !== 'string') {\n    throw new Error(\"\".concat(signature, \" takes a \\\"selector\\\"-argument which must be a string\"));\n  }\n  if (!Array.isArray(items)) {\n    throw new Error(\"\".concat(signature, \" takes an \\\"items\\\"-argument which must be an array\"));\n  }\n};\nexports.hasDataset = function (config) {\n  if (!config.dataset) {\n    throw new Error('`dataset` must be provided to perform queries');\n  }\n  return config.dataset || '';\n};\nexports.requestTag = function (tag) {\n  if (typeof tag !== 'string' || !/^[a-z0-9._-]{1,75}$/i.test(tag)) {\n    throw new Error(\"Tag can only contain alphanumeric characters, underscores, dashes and dots, and be between one and 75 characters long.\");\n  }\n  return tag;\n};","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","VALID_ASSET_TYPES","VALID_INSERT_LOCATIONS","exports","dataset","name","test","Error","projectId","id","validateAssetType","type","indexOf","concat","join","validateObject","op","val","Array","isArray","requireDocumentId","doc","_id","validateDocumentId","validateInsert","at","selector","items","signature","valid","map","loc","hasDataset","config","requestTag","tag"],"sources":["C:/Users/Sampah/Desktop/project/try/DIDASHARE/dida_frontend/node_modules/@sanity/client/lib/validators.js"],"sourcesContent":["\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nvar VALID_ASSET_TYPES = ['image', 'file'];\nvar VALID_INSERT_LOCATIONS = ['before', 'after', 'replace'];\n\nexports.dataset = function (name) {\n  if (!/^(~[a-z0-9]{1}[-\\w]{0,63}|[a-z0-9]{1}[-\\w]{0,63})$/.test(name)) {\n    throw new Error('Datasets can only contain lowercase characters, numbers, underscores and dashes, and start with tilde, and be maximum 64 characters');\n  }\n};\n\nexports.projectId = function (id) {\n  if (!/^[-a-z0-9]+$/i.test(id)) {\n    throw new Error('`projectId` can only contain only a-z, 0-9 and dashes');\n  }\n};\n\nexports.validateAssetType = function (type) {\n  if (VALID_ASSET_TYPES.indexOf(type) === -1) {\n    throw new Error(\"Invalid asset type: \".concat(type, \". Must be one of \").concat(VALID_ASSET_TYPES.join(', ')));\n  }\n};\n\nexports.validateObject = function (op, val) {\n  if (val === null || _typeof(val) !== 'object' || Array.isArray(val)) {\n    throw new Error(\"\".concat(op, \"() takes an object of properties\"));\n  }\n};\n\nexports.requireDocumentId = function (op, doc) {\n  if (!doc._id) {\n    throw new Error(\"\".concat(op, \"() requires that the document contains an ID (\\\"_id\\\" property)\"));\n  }\n\n  exports.validateDocumentId(op, doc._id);\n};\n\nexports.validateDocumentId = function (op, id) {\n  if (typeof id !== 'string' || !/^[a-z0-9_.-]+$/i.test(id)) {\n    throw new Error(\"\".concat(op, \"(): \\\"\").concat(id, \"\\\" is not a valid document ID\"));\n  }\n};\n\nexports.validateInsert = function (at, selector, items) {\n  var signature = 'insert(at, selector, items)';\n\n  if (VALID_INSERT_LOCATIONS.indexOf(at) === -1) {\n    var valid = VALID_INSERT_LOCATIONS.map(function (loc) {\n      return \"\\\"\".concat(loc, \"\\\"\");\n    }).join(', ');\n    throw new Error(\"\".concat(signature, \" takes an \\\"at\\\"-argument which is one of: \").concat(valid));\n  }\n\n  if (typeof selector !== 'string') {\n    throw new Error(\"\".concat(signature, \" takes a \\\"selector\\\"-argument which must be a string\"));\n  }\n\n  if (!Array.isArray(items)) {\n    throw new Error(\"\".concat(signature, \" takes an \\\"items\\\"-argument which must be an array\"));\n  }\n};\n\nexports.hasDataset = function (config) {\n  if (!config.dataset) {\n    throw new Error('`dataset` must be provided to perform queries');\n  }\n\n  return config.dataset || '';\n};\n\nexports.requestTag = function (tag) {\n  if (typeof tag !== 'string' || !/^[a-z0-9._-]{1,75}$/i.test(tag)) {\n    throw new Error(\"Tag can only contain alphanumeric characters, underscores, dashes and dots, and be between one and 75 characters long.\");\n  }\n\n  return tag;\n};"],"mappings":"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"},"metadata":{},"sourceType":"script"}