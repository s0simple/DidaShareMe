{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nvar objectAssign = require('object-assign');\nvar isPlainObject = require('is-plain-object');\nvar serializeTypes = ['boolean', 'string', 'number'];\nvar isBuffer = function isBuffer(obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj);\n};\nmodule.exports = function () {\n  return {\n    processOptions: function processOptions(options) {\n      var body = options.body;\n      if (!body) {\n        return options;\n      }\n      var isStream = typeof body.pipe === 'function';\n      var shouldSerialize = !isStream && !isBuffer(body) && (serializeTypes.indexOf(_typeof(body)) !== -1 || Array.isArray(body) || isPlainObject(body));\n      if (!shouldSerialize) {\n        return options;\n      }\n      return objectAssign({}, options, {\n        body: JSON.stringify(options.body),\n        headers: objectAssign({}, options.headers, {\n          'Content-Type': 'application/json'\n        })\n      });\n    }\n  };\n};","map":{"version":3,"mappings":";;;;;;;;;;;AAAA,IAAMA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA5B;AACA,IAAMC,aAAa,GAAGD,OAAO,CAAC,iBAAD,CAA7B;AAEA,IAAME,cAAc,GAAG,CAAC,SAAD,EAAY,QAAZ,EAAsB,QAAtB,CAAvB;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,IAAG;EAAA,OAClB,CAAC,CAACC,GAAG,CAACC,WAAN,IACA,OAAOD,GAAG,CAACC,WAAJ,CAAgBF,QAAvB,KAAoC,UADpC,IAEAC,GAAG,CAACC,WAAJ,CAAgBF,QAAhB,CAAyBC,GAAzB,CAHkB;AAAA,CAApB;AAKAE,MAAM,CAACC,OAAP,GAAiB;EAAA,OAAO;IACtBC,cAAc,EAAE,+BAAO,EAAI;MACzB,IAAMC,IAAI,GAAGC,OAAO,CAACD,IAArB;MACA,IAAI,CAACA,IAAL,EAAW;QACT,OAAOC,OAAP;MACD;MAED,IAAMC,QAAQ,GAAG,OAAOF,IAAI,CAACG,IAAZ,KAAqB,UAAtC;MACA,IAAMC,eAAe,GACnB,CAACF,QAAD,IACA,CAACR,QAAQ,CAACM,IAAD,CADT,KAECP,cAAc,CAACY,OAAf,SAA8BL,IAA9B,OAAwC,CAAC,CAAzC,IAA8CM,KAAK,CAACC,OAAN,CAAcP,IAAd,CAA9C,IAAqER,aAAa,CAACQ,IAAD,CAFnF,CADF;MAKA,IAAI,CAACI,eAAL,EAAsB;QACpB,OAAOH,OAAP;MACD;MAED,OAAOX,YAAY,CAAC,EAAD,EAAKW,OAAL,EAAc;QAC/BD,IAAI,EAAEQ,IAAI,CAACC,SAAL,CAAeR,OAAO,CAACD,IAAvB,CADyB;QAE/BU,OAAO,EAAEpB,YAAY,CAAC,EAAD,EAAKW,OAAO,CAACS,OAAb,EAAsB;UACzC,gBAAgB;QADyB,CAAtB;MAFU,CAAd,CAAnB;IAMD;EAvBqB,CAAP;AAAA,CAAjB","names":["objectAssign","require","isPlainObject","serializeTypes","isBuffer","obj","constructor","module","exports","processOptions","body","options","isStream","pipe","shouldSerialize","indexOf","Array","isArray","JSON","stringify","headers"],"sources":["C:\\Users\\Sampah\\Desktop\\project\\try\\DIDASHARE\\dida_frontend\\node_modules\\get-it\\src\\middleware\\jsonRequest.js"],"sourcesContent":["const objectAssign = require('object-assign')\nconst isPlainObject = require('is-plain-object')\n\nconst serializeTypes = ['boolean', 'string', 'number']\nconst isBuffer = obj =>\n  !!obj.constructor &&\n  typeof obj.constructor.isBuffer === 'function' &&\n  obj.constructor.isBuffer(obj)\n\nmodule.exports = () => ({\n  processOptions: options => {\n    const body = options.body\n    if (!body) {\n      return options\n    }\n\n    const isStream = typeof body.pipe === 'function'\n    const shouldSerialize =\n      !isStream &&\n      !isBuffer(body) &&\n      (serializeTypes.indexOf(typeof body) !== -1 || Array.isArray(body) || isPlainObject(body))\n\n    if (!shouldSerialize) {\n      return options\n    }\n\n    return objectAssign({}, options, {\n      body: JSON.stringify(options.body),\n      headers: objectAssign({}, options.headers, {\n        'Content-Type': 'application/json'\n      })\n    })\n  }\n})\n"]},"metadata":{},"sourceType":"script"}