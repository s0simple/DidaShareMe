{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar config_1 = require(\"./config\");\nvar hostReportError_1 = require(\"./util/hostReportError\");\nexports.empty = {\n  closed: true,\n  next: function (value) {},\n  error: function (err) {\n    if (config_1.config.useDeprecatedSynchronousErrorHandling) {\n      throw err;\n    } else {\n      hostReportError_1.hostReportError(err);\n    }\n  },\n  complete: function () {}\n};","map":{"version":3,"mappings":";;;;;AACA;AACA;AAEaA,aAAK,GAAkB;EAClCC,MAAM,EAAE,IAAI;EACZC,IAAI,EAAJ,UAAKC,KAAU,GAAoB,CAAC;EACpCC,KAAK,EAAL,UAAMC,GAAQ;IACZ,IAAIC,eAAM,CAACC,qCAAqC,EAAE;MAChD,MAAMF,GAAG;KACV,MAAM;MACLG,iCAAe,CAACH,GAAG,CAAC;;EAExB,CAAC;EACDI,QAAQ,EAAR,aAA4B;CAC7B","names":["exports","closed","next","value","error","err","config_1","useDeprecatedSynchronousErrorHandling","hostReportError_1","complete"],"sources":["C:\\Users\\Sampah\\Desktop\\project\\try\\DIDASHARE\\dida_frontend\\node_modules\\rxjs\\src\\internal\\Observer.ts"],"sourcesContent":["import { Observer } from './types';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      throw err;\n    } else {\n      hostReportError(err);\n    }\n  },\n  complete(): void { /*noop*/ }\n};\n"]},"metadata":{},"sourceType":"script"}