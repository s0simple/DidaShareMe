{"ast":null,"code":"\"use strict\";\n\nmodule.exports = function () {\n  return {\n    onRequest: function onRequest(evt) {\n      if (evt.adapter !== 'xhr') {\n        return;\n      }\n      var xhr = evt.request;\n      var context = evt.context;\n      if ('upload' in xhr && 'onprogress' in xhr.upload) {\n        xhr.upload.onprogress = handleProgress('upload');\n      }\n      if ('onprogress' in xhr) {\n        xhr.onprogress = handleProgress('download');\n      }\n      function handleProgress(stage) {\n        return function (event) {\n          var percent = event.lengthComputable ? event.loaded / event.total * 100 : -1;\n          context.channels.progress.publish({\n            stage: stage,\n            percent: percent,\n            total: event.total,\n            loaded: event.loaded,\n            lengthComputable: event.lengthComputable\n          });\n        };\n      }\n    }\n  };\n};","map":{"version":3,"mappings":";;AAAAA,MAAM,CAACC,OAAP,GAAiB;EAAA,OAAO;IACtBC,SAAS,EAAE,sBAAG,EAAI;MAChB,IAAIC,GAAG,CAACC,OAAJ,KAAgB,KAApB,EAA2B;QACzB;MACD;MAED,IAAMC,GAAG,GAAGF,GAAG,CAACG,OAAhB;MACA,IAAMC,OAAO,GAAGJ,GAAG,CAACI,OAApB;MAEA,IAAI,YAAYF,GAAZ,IAAmB,gBAAgBA,GAAG,CAACG,MAA3C,EAAmD;QACjDH,GAAG,CAACG,MAAJ,CAAWC,UAAX,GAAwBC,cAAc,CAAC,QAAD,CAAtC;MACD;MAED,IAAI,gBAAgBL,GAApB,EAAyB;QACvBA,GAAG,CAACI,UAAJ,GAAiBC,cAAc,CAAC,UAAD,CAA/B;MACD;MAED,SAASA,cAAT,CAAwBC,KAAxB,EAA+B;QAC7B,OAAO,eAAK,EAAI;UACd,IAAMC,OAAO,GAAGC,KAAK,CAACC,gBAAN,GAA0BD,KAAK,CAACE,MAAN,GAAeF,KAAK,CAACG,KAAtB,GAA+B,GAAxD,GAA8D,CAAC,CAA/E;UACAT,OAAO,CAACU,QAAR,CAAiBC,QAAjB,CAA0BC,OAA1B,CAAkC;YAChCR,KAAK,EAALA,KADgC;YAEhCC,OAAO,EAAPA,OAFgC;YAGhCI,KAAK,EAAEH,KAAK,CAACG,KAHmB;YAIhCD,MAAM,EAAEF,KAAK,CAACE,MAJkB;YAKhCD,gBAAgB,EAAED,KAAK,CAACC;UALQ,CAAlC;QAOD,CATD;MAUD;IACF;EA7BqB,CAAP;AAAA,CAAjB","names":["module","exports","onRequest","evt","adapter","xhr","request","context","upload","onprogress","handleProgress","stage","percent","event","lengthComputable","loaded","total","channels","progress","publish"],"sources":["C:\\Users\\Sampah\\Desktop\\project\\try\\DIDASHARE\\dida_frontend\\node_modules\\get-it\\src\\middleware\\progress\\browser-progress.js"],"sourcesContent":["module.exports = () => ({\n  onRequest: evt => {\n    if (evt.adapter !== 'xhr') {\n      return\n    }\n\n    const xhr = evt.request\n    const context = evt.context\n\n    if ('upload' in xhr && 'onprogress' in xhr.upload) {\n      xhr.upload.onprogress = handleProgress('upload')\n    }\n\n    if ('onprogress' in xhr) {\n      xhr.onprogress = handleProgress('download')\n    }\n\n    function handleProgress(stage) {\n      return event => {\n        const percent = event.lengthComputable ? (event.loaded / event.total) * 100 : -1\n        context.channels.progress.publish({\n          stage,\n          percent,\n          total: event.total,\n          loaded: event.loaded,\n          lengthComputable: event.lengthComputable\n        })\n      }\n    }\n  }\n})\n"]},"metadata":{},"sourceType":"script"}