{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar Subscriber_1 = require(\"../Subscriber\");\nvar rxSubscriber_1 = require(\"../symbol/rxSubscriber\");\nvar Observer_1 = require(\"../Observer\");\nfunction toSubscriber(nextOrObserver, error, complete) {\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n      return nextOrObserver;\n    }\n    if (nextOrObserver[rxSubscriber_1.rxSubscriber]) {\n      return nextOrObserver[rxSubscriber_1.rxSubscriber]();\n    }\n  }\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber_1.Subscriber(Observer_1.empty);\n  }\n  return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n}\nexports.toSubscriber = toSubscriber;","map":{"version":3,"mappings":";;;;;AAAA;AACA;AACA;AAGA,SAAgBA,YAAY,CAC1BC,cAA0D,EAC1DC,KAA4B,EAC5BC,QAAqB;EAErB,IAAIF,cAAc,EAAE;IAClB,IAAIA,cAAc,YAAYG,uBAAU,EAAE;MACxC,OAAwBH,cAAe;;IAGzC,IAAIA,cAAc,CAACI,2BAAkB,CAAC,EAAE;MACtC,OAAOJ,cAAc,CAACI,2BAAkB,CAAC,EAAE;;;EAI/C,IAAI,CAACJ,cAAc,IAAI,CAACC,KAAK,IAAI,CAACC,QAAQ,EAAE;IAC1C,OAAO,IAAIC,uBAAU,CAACE,gBAAa,CAAC;;EAGtC,OAAO,IAAIF,uBAAU,CAACH,cAAc,EAAEC,KAAK,EAAEC,QAAQ,CAAC;AACxD;AApBAI","names":["toSubscriber","nextOrObserver","error","complete","Subscriber_1","rxSubscriber_1","Observer_1","exports"],"sources":["C:\\Users\\Sampah\\Desktop\\project\\try\\DIDASHARE\\dida_frontend\\node_modules\\rxjs\\src\\internal\\util\\toSubscriber.ts"],"sourcesContent":["import { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nimport { PartialObserver } from '../types';\n\nexport function toSubscriber<T>(\n  nextOrObserver?: PartialObserver<T> | ((value: T) => void),\n  error?: (error: any) => void,\n  complete?: () => void): Subscriber<T> {\n\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return (<Subscriber<T>> nextOrObserver);\n    }\n\n    if (nextOrObserver[rxSubscriberSymbol]) {\n      return nextOrObserver[rxSubscriberSymbol]();\n    }\n  }\n\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber(emptyObserver);\n  }\n\n  return new Subscriber(nextOrObserver, error, complete);\n}\n"]},"metadata":{},"sourceType":"script"}